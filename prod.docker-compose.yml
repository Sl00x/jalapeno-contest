services:
  frontend:
    build:
      context: ./frontend
      dockerfile: ./prod.Dockerfile
    restart: always

  database:
    image: postgres:12.11-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      PGUSER: ${DATABASE_USER}
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PORT: ${DATABASE_PORT}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_DB}
    volumes:
      - database:/var/lib/postgresql/data

  backend:
    privileged: true
    build:
      context: ./backend
      dockerfile: ./prod.Dockerfile
    restart: always
    environment:
      PAYPAL_CLIENT_ID: ${PAYPAL_CLIENT_ID}
      PAYPAL_CLIENT_SECRET: ${PAYPAL_CLIENT_SECRET}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_DB: ${DATABASE_DB}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      database:
        condition: service_healthy

  nginx:
    build: ./nginx
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./ssl:/ssl:ro
      - ./logs/nginx:/var/log/nginx
      - ./nginx/prod.proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  database:
    driver: local
